fn legacy_rlp_encoded_tx() -> Span<u8> {
    // tx_format (EIP-155, unsigned): [nonce, gasPrice, gasLimit, to, value, data, chainId, 0, 0]
    // expected rlp decoding:  [ '0x', '0x3b9aca00', '0x1e8480', '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984', '0x016345785d8a0000', '0xabcdef', '0x434841494e5f4944', '0x', '0x' ]
    // message_hash: 0x1026be08dc5113457dc5550128d53b1d2b2b6418ffe098468f805ecdcf34efd1
    // chain id used: 0x434841494e5f4944
    array![
        247,
        128,
        132,
        59,
        154,
        202,
        0,
        131,
        30,
        132,
        128,
        148,
        31,
        152,
        64,
        168,
        93,
        90,
        245,
        191,
        29,
        23,
        98,
        249,
        37,
        189,
        173,
        220,
        66,
        1,
        249,
        132,
        136,
        1,
        99,
        69,
        120,
        93,
        138,
        0,
        0,
        131,
        171,
        205,
        239,
        136,
        67,
        72,
        65,
        73,
        78,
        95,
        73,
        68,
        128,
        128
    ]
        .span()
}

fn legacy_rlp_encoded_deploy_tx() -> Span<u8> {
    // tx_format (EIP-155, unsigned): [nonce, gasPrice, gasLimit, to, value, data, chainId, 0, 0]
    // expected rlp decoding:  ["0x","0x0a","0x061a80","0x","0x0186a0","0x600160010a5060006000f3","0x4b4b5254","0x","0x"]
    array![
        0xde,
        0x80,
        0x0a,
        0x83,
        0x06,
        0x1a,
        0x80,
        0x80,
        0x83,
        0x01,
        0x86,
        0xa0,
        0x8b,
        0x60,
        0x01,
        0x60,
        0x01,
        0x0a,
        0x50,
        0x60,
        0x00,
        0x60,
        0x00,
        0xf3,
        0x84,
        0x4b,
        0x4b,
        0x52,
        0x54,
        0x80,
        0x80
    ]
        .span()
}


fn eip_2930_encoded_tx() -> Span<u8> {
    // tx_format (EIP-2930, unsigned): 0x01  || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList])
    // expected rlp decoding:   [ "0x434841494e5f4944", "0x", "0x3b9aca00", "0x1e8480", "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984", "0x016345785d8a0000", "0xabcdef", [] ]
    // message_hash: 0xc0227f45fccb86cd5befdffc546c193361174fdf0a08443a874c854e62f60981
    // chain id used: 0x434841494e5f4944
    array![
        1,
        246,
        136,
        67,
        72,
        65,
        73,
        78,
        95,
        73,
        68,
        128,
        132,
        59,
        154,
        202,
        0,
        131,
        30,
        132,
        128,
        148,
        31,
        152,
        64,
        168,
        93,
        90,
        245,
        191,
        29,
        23,
        98,
        249,
        37,
        189,
        173,
        220,
        66,
        1,
        249,
        132,
        136,
        1,
        99,
        69,
        120,
        93,
        138,
        0,
        0,
        131,
        171,
        205,
        239,
        192
    ]
        .span()
}

fn eip_1559_encoded_tx() -> Span<u8> {
    // tx_format (EIP-1559, unsigned):  0x02 || rlp([chain_id, nonce, max_priority_fee_per_gas, max_fee_per_gas, gas_limit, destination, amount, data, access_list])
    // expected rlp decoding: [ "0x434841494e5f4944", "0x", "0x", "0x3b9aca00", "0x1e8480", "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984", "0x016345785d8a0000", "0xabcdef", [] ]
    // message_hash: 0xe14268e90788a8e63d8db7f6996dc71dbd9b8ce1314bc9e657735c66137615cc
    // chain id used: 0x434841494e5f4944
    array![
        2,
        247,
        136,
        67,
        72,
        65,
        73,
        78,
        95,
        73,
        68,
        128,
        128,
        132,
        59,
        154,
        202,
        0,
        131,
        30,
        132,
        128,
        148,
        31,
        152,
        64,
        168,
        93,
        90,
        245,
        191,
        29,
        23,
        98,
        249,
        37,
        189,
        173,
        220,
        66,
        1,
        249,
        132,
        136,
        1,
        99,
        69,
        120,
        93,
        138,
        0,
        0,
        131,
        171,
        205,
        239,
        192
    ]
        .span()
}
